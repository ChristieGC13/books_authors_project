Query: Create 5 books with the following names: C Sharp, Java, Python, PHP, Ruby

>>> from books_authors_app.models import *
>>> c_sharp = Book.objects.create(title='C Sharp', desc='Book on C Sharp')
>>> java = Book.objects.create(title='Java', desc='Book on Java')
>>> python = Book.objects.create(title='Python', desc='Book on Python')
>>> php = Book.objects.create(title='PHP', desc='Book on PHP')
>>> ruby = Book.objects.create(title='Ruby', desc='Book on Ruby')

Query: Create 5 different authors: Jane Austen, Emily Dickinson, Fyodor Dostoevsky, William Shakespeare, Lau Tzu

>>> jane_austen = Author.objects.create(first_name='Jane', last_name='Austen')
>>> emily_dickenson = Author.objects.create(first_name='Emily', last_name='Dickenson')
>>> fyodor_dostoevsky = Author.objects.create(first_name='Fyodor', last_name='Dostoevsky')
>>> william_shakespeare = Author.objects.create(first_name='William', last_name='Shakespeare')
>>> lau_tzu = Author.objects.create(first_name='Lau', last_name='Tzu')

Add a new text field in the authors table called 'notes'.
Create and run the migration files to update the table in your database.

Query: Change the name of the C Sharp book to C#

>>> c_sharp = Book.objects.get(id=1)
>>> print(c_sharp.title)
C Sharp
>>> c_sharp.title = 'C#'
>>> print(c_sharp.title)
C#

Query: Change the first name of the 4th author to Bill

>>> william_shakespeare = Author.objects.get(id=4)
>>> print(william_shakespeare.first_name)
William
>>> william_shakespeare.first_name = 'Bill'
>>> print(william_shakespeare.first_name)
Bill

Query: Assign the first author to the first 2 books

>>> book1= Book.objects.get(id=1)
>>> book2= Book.objects.get(id=2)
>>> author1=Author.objects.get(id=1)
>>> author1.authors.add(book1, book2)
>>> author1.book.add(book1, book2)

Query: Assign the second author to the first 3 books

>>> book3=Book.objects.get(id=3)
>>> author2=Author.objects.get(id=2)
>>> author2.book.add(book1, book2, book3)

Query: Assign the third author to the first 4 books

>>> book4=Book.objects.get(id=4)
>>> author3=Author.objects.get(id=3)
>>> author3.book.add(book1, book2, book3, book4)

Query: Assign the fourth author to the first 5 books (or in other words, all the books)

>>> author4=Author.objects.get(id=4)
>>> author5=Author.objects.get(id=5)
>>> book5=Book.objects.get(id=5)
>>> author4.book.add(book1, book2, book3, book4, book5)

Query: Retrieve all the authors for the 3rd book

book3.authors.all()
<QuerySet [<Author: Author object (2)>, <Author: Author object (3)>, <Author: Author object (4)>]>

Query: Remove the first author of the 3rd book

>>> book3.authors.remove(author2)

Query: Add the 5th author as one of the authors of the 2nd book

>>> book2.authors.add(author5)

Query: Find all the books that the 3rd author is part of

>>> author3.book.all()
<QuerySet [<Book: Book object (1)>, <Book: Book object (2)>, <Book: Book object (3)>, <Book: Book object (4)>]>

Query: Find all the authors that contributed to the 5th book

>>> book5.authors.all()
<QuerySet [<Author: Author object (4)>]>
